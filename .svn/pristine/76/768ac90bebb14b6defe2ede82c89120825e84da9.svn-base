using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace keyencePartsVerifier.TRANSACTION
{
    public partial class actualChecking_byTables2_status : Form
    {
        public actualChecking_byTables2_status()
        {
            InitializeComponent();
        }

        public actualChecking_byTables2_status(string _model=null, string _line=null, string _machine=null, string _table=null, SqlConnection _con=null)
        {
            InitializeComponent();
            _getStatus(_model, _line, _machine, _table, _con);
        }
        private void actualChecking_byTables2_status_Load(object sender, EventArgs e)
        {
            if (dataGridView1.Rows.Count > 0)
            {
                this.WindowState = FormWindowState.Normal;
                //this.StartPosition = FormStartPosition.CenterScreen;
                this.Location = new Point((Screen.PrimaryScreen.WorkingArea.Width - this.Width) / 2, (Screen.PrimaryScreen.WorkingArea.Height- this.Height) / 2);
            }
            else
            {
                MessageBox.Show("No rows found!");
                this.Close();
            }
        }
        void _getStatus(string model, string line, string machine, string table, SqlConnection con)
        {
            if(model==null || line==null || 
                machine==null || table==null ||
                con == null)
            {
                MessageBox.Show("Not supplied all parameters!", "Required fields are null", MessageBoxButtons.OK,MessageBoxIcon.Error);
                return;
            }
           
            using (con)
            {
                SqlCommand cmdS = new SqlCommand("sp_getCheckingProgress", con);
                cmdS.CommandType = CommandType.StoredProcedure;
                cmdS.Parameters.AddWithValue("@model", model);
                cmdS.Parameters.AddWithValue("@line", line);
                cmdS.Parameters.AddWithValue("@machine", machine);
                cmdS.Parameters.AddWithValue("@table", table);
                con.Open();
                SqlDataReader dr = cmdS.ExecuteReader();
                while (dr.Read())
                {
                    dataGridView1.Rows.Add(dr["order_id"].ToString().Trim(),
                                            dr["tableName"].ToString().Trim(),
                                            dr["feederLocation"].ToString().Trim(),
                                            dr["partsName"].ToString().Trim(),
                                            dr["status"].ToString().Trim(),  "1");
                }
                dr.Close();
                //da.Fill(dt);
                //dataGridView1.DataSource = dt;
                _dgvProperty();
                //MessageBox.Show(model+"-" +line+"-"+  machine+"-"+ table, "Requested Query");
            }

            lbl_title.Text = line + " - " + machine + " - " + table+"     ("+dataGridView1.Rows.Count.ToString()+" rows)";
        }
        void _dgvProperty()
        {
            if(dataGridView1.Rows.Count>0){
                //dataGridView1.Columns["lineName"].Visible = false;
                //dataGridView1.Columns["machineName"].Visible = false;
                //dataGridView1.Columns["modelName"].Visible = false;

                //dataGridView1.Columns["order_id"].HeaderText = "Order ID";
                //dataGridView1.Columns["tableName"].HeaderText = "Table";
                //dataGridView1.Columns["feederLocation"].HeaderText = "Feeder Location";
                //dataGridView1.Columns["partsName"].HeaderText = "Parts (RINKS)";
                //dataGridView1.Columns["status"].HeaderText = "Status";

            }
        }
        private void btn_close_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btn_close_Click_1(object sender, EventArgs e)
        {
            this.Close();
        }

        private void dataGridView1_RowPostPaint(object sender, DataGridViewRowPostPaintEventArgs e)
        {
            gclass._dgvRows(sender,e,this.Font);
        }

        private void dataGridView1_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)
        {
            if (dataGridView1.Rows[e.RowIndex].Cells["dg_status"].Value.ToString()=="1")
            {
                dataGridView1.Rows[e.RowIndex].DefaultCellStyle.BackColor = Color.Teal;
                dataGridView1.Rows[e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.Teal;
            }
            else
            {
                dataGridView1.Rows[e.RowIndex].DefaultCellStyle.BackColor = Color.DarkRed;
                dataGridView1.Rows[e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.DarkRed;
            }
        }
    }

    //public class Infomtion<T> where T : class
    //{
    //    public 
    //}
    //public class fa
    //{

    //    //System.Collections.IEnumerable<Infomtio>
    //    //public void T 
    //    //{

    //    string _model;

    //    public string Model
    //    {
    //        get { return _model; }
    //        set { _model = value; }
    //    } 
    //    string _line;

    //    public string Line
    //    {
    //        get { return _line; }
    //        set { _line = value; }
    //    } 
    //    string _machine;

    //    public string Machine
    //    {
    //        get { return _machine; }
    //        set { _machine = value; }
    //    } 
    //    string _table;

    //    public string Table
    //    {
    //        get { return _table; }
    //        set { _table = value; }
    //    } 
    //    SqlConnection con;

    //    public SqlConnection Con
    //    {
    //        get { return con; }
    //        set { con = value; }
    //    }
    //}
}


